// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ExamSystem.Models;

public partial class ExamDBContext : DbContext
{
    public ExamDBContext()
    {
    }

    public ExamDBContext(DbContextOptions<ExamDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Answer> Answers { get; set; }

    public virtual DbSet<Exam> Exams { get; set; }

    public virtual DbSet<MCQQuestion> MCQQuestions { get; set; }

    public virtual DbSet<Result> Results { get; set; }

    public virtual DbSet<StudentExam> StudentExams { get; set; }

    public virtual DbSet<TrueFalseQuestion> TrueFalseQuestions { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Answer>(entity =>
        {
            entity.HasOne(d => d.MCQ).WithMany(p => p.Answers).HasConstraintName("FK_Answers_MCQQuestion1");

            entity.HasOne(d => d.StudentExam).WithMany(p => p.Answers).HasConstraintName("FK_Answers_StudentExam");

            entity.HasOne(d => d.TrueFalse).WithMany(p => p.Answers).HasConstraintName("FK_Answers_TrueFalseQuestion1");
        });

        modelBuilder.Entity<MCQQuestion>(entity =>
        {
            entity.HasOne(d => d.Exam).WithMany(p => p.MCQQuestions).HasConstraintName("FK_MCQQuestion_Exam");
        });

        modelBuilder.Entity<Result>(entity =>
        {
            entity.HasKey(e => e.Result_ID).HasName("PK_Table_1");

            entity.HasOne(d => d.Exam).WithMany(p => p.Results).HasConstraintName("FK_Result_Exam");

            entity.HasOne(d => d.User).WithMany(p => p.Results).HasConstraintName("FK_Result_User");
        });

        modelBuilder.Entity<StudentExam>(entity =>
        {
            entity.HasOne(d => d.Exam).WithMany(p => p.StudentExams).HasConstraintName("FK_StudentExam_Exam");

            entity.HasOne(d => d.Student).WithMany(p => p.StudentExams).HasConstraintName("FK_StudentExam_User");
        });

        modelBuilder.Entity<TrueFalseQuestion>(entity =>
        {
            entity.Property(e => e.Option1).IsFixedLength();
            entity.Property(e => e.Option2).IsFixedLength();

            entity.HasOne(d => d.Exam).WithMany(p => p.TrueFalseQuestions).HasConstraintName("FK_TrueFalseQuestion_Exam");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}